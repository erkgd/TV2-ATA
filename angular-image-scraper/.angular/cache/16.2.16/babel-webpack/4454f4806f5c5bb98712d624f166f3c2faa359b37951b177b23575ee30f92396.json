{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/auth.service\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Username is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"border-red-500\": a0\n  };\n};\nconst _c1 = function () {\n  return [\"/register\"];\n};\nexport class LoginComponent {\n  constructor(fb, route, router, authService) {\n    this.fb = fb;\n    this.route = route;\n    this.router = router;\n    this.authService = authService;\n    this.loading = false;\n    this.submitted = false;\n    this.error = null;\n    this.returnUrl = '/';\n    this.loginForm = this.fb.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n    // Redirect if already logged in\n    if (this.authService.isLoggedIn()) {\n      this.router.navigate(['/']);\n    }\n  }\n  ngOnInit() {\n    // Get return URL from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.error = null;\n    const {\n      username,\n      password\n    } = this.loginForm.value;\n    this.authService.login(username, password).subscribe({\n      next: response => {\n        this.authService.saveToken(response.token);\n        this.router.navigate([this.returnUrl]);\n      },\n      error: err => {\n        this.error = err?.error?.message || 'Login failed. Please check your credentials.';\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 25,\n      vars: 14,\n      consts: [[1, \"max-w-md\", \"mx-auto\", \"mt-10\"], [1, \"bg-white\", \"rounded-lg\", \"shadow-md\", \"overflow-hidden\"], [1, \"p-6\"], [1, \"text-2xl\", \"font-bold\", \"text-center\", \"mb-6\"], [\"class\", \"p-3 mb-4 bg-red-100 text-red-700 rounded-lg\", 4, \"ngIf\"], [1, \"space-y-4\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"username\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\", \"mb-1\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", 1, \"w-full\", \"p-2\", \"border\", \"border-gray-300\", \"rounded-md\", \"focus:ring-blue-500\", \"focus:border-blue-500\", 3, \"ngClass\"], [\"class\", \"text-red-500 text-xs mt-1\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\", \"mb-1\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"w-full\", \"p-2\", \"border\", \"border-gray-300\", \"rounded-md\", \"focus:ring-blue-500\", \"focus:border-blue-500\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"w-full\", \"bg-blue-500\", \"hover:bg-blue-600\", \"text-white\", \"font-medium\", \"py-2\", \"px-4\", \"rounded-lg\", \"disabled:opacity-50\", 3, \"disabled\"], [1, \"mt-6\", \"text-center\"], [1, \"text-sm\", \"text-gray-600\"], [1, \"text-blue-500\", \"hover:underline\", 3, \"routerLink\"], [1, \"p-3\", \"mb-4\", \"bg-red-100\", \"text-red-700\", \"rounded-lg\"], [1, \"text-red-500\", \"text-xs\", \"mt-1\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n          i0.ɵɵtext(4, \"Log In\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(5, LoginComponent_div_5_Template, 2, 1, \"div\", 4);\n          i0.ɵɵelementStart(6, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(7, \"div\")(8, \"label\", 6);\n          i0.ɵɵtext(9, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 7);\n          i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 2, 0, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\")(13, \"label\", 9);\n          i0.ɵɵtext(14, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 10);\n          i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 2, 0, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\")(18, \"button\", 11);\n          i0.ɵɵtext(19);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(20, \"div\", 12)(21, \"p\", 13);\n          i0.ɵɵtext(22, \" Don't have an account? \");\n          i0.ɵɵelementStart(23, \"a\", 14);\n          i0.ɵɵtext(24, \"Sign up\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ((tmp_2_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_2_0.invalid)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ((tmp_3_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_3_0.errors));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.submitted && ((tmp_4_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_4_0.invalid)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ((tmp_5_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_5_0.errors));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Logging in...\" : \"Log In\", \" \");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(13, _c1));\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i2.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","error","LoginComponent","constructor","fb","route","router","authService","loading","submitted","returnUrl","loginForm","group","username","required","password","isLoggedIn","navigate","ngOnInit","snapshot","queryParams","onSubmit","invalid","value","login","subscribe","next","response","saveToken","token","err","message","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","Router","i3","AuthService","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtemplate","LoginComponent_div_5_Template","ɵɵlistener","LoginComponent_Template_form_ngSubmit_6_listener","ɵɵelement","LoginComponent_div_11_Template","LoginComponent_div_16_Template","ɵɵproperty","ɵɵpureFunction1","_c0","tmp_2_0","get","tmp_3_0","errors","tmp_4_0","tmp_5_0","ɵɵpureFunction0","_c1"],"sources":["C:\\Users\\aleja\\Desktop\\BINFO\\ATA\\image-crawler\\angular-image-scraper\\src\\app\\components\\auth\\login.component.ts","C:\\Users\\aleja\\Desktop\\BINFO\\ATA\\image-crawler\\angular-image-scraper\\src\\app\\components\\auth\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  error: string | null = null;\r\n  returnUrl: string = '/';\r\n  \r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    this.loginForm = this.fb.group({\r\n      username: ['', [Validators.required]],\r\n      password: ['', [Validators.required]]\r\n    });\r\n    \r\n    // Redirect if already logged in\r\n    if (this.authService.isLoggedIn()) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Get return URL from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    \r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n    \r\n    this.loading = true;\r\n    this.error = null;\r\n    \r\n    const { username, password } = this.loginForm.value;\r\n    \r\n    this.authService.login(username, password).subscribe({\r\n      next: (response) => {\r\n        this.authService.saveToken(response.token);\r\n        this.router.navigate([this.returnUrl]);\r\n      },\r\n      error: (err) => {\r\n        this.error = err?.error?.message || 'Login failed. Please check your credentials.';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"max-w-md mx-auto mt-10\">\r\n  <div class=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n    <div class=\"p-6\">\r\n      <h1 class=\"text-2xl font-bold text-center mb-6\">Log In</h1>\r\n\r\n      <div *ngIf=\"error\" class=\"p-3 mb-4 bg-red-100 text-red-700 rounded-lg\">\r\n        {{ error }}\r\n      </div>\r\n      \r\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"space-y-4\">\r\n        <div>\r\n          <label for=\"username\" class=\"block text-sm font-medium text-gray-700 mb-1\">Username</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"username\" \r\n            formControlName=\"username\"\r\n            class=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\r\n            [ngClass]=\"{ 'border-red-500': submitted && loginForm.get('username')?.invalid }\"\r\n          >\r\n          <div *ngIf=\"submitted && loginForm.get('username')?.errors\" class=\"text-red-500 text-xs mt-1\">\r\n            Username is required\r\n          </div>\r\n        </div>\r\n        \r\n        <div>\r\n          <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-1\">Password</label>\r\n          <input \r\n            type=\"password\" \r\n            id=\"password\" \r\n            formControlName=\"password\"\r\n            class=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\r\n            [ngClass]=\"{ 'border-red-500': submitted && loginForm.get('password')?.invalid }\"\r\n          >\r\n          <div *ngIf=\"submitted && loginForm.get('password')?.errors\" class=\"text-red-500 text-xs mt-1\">\r\n            Password is required\r\n          </div>\r\n        </div>\r\n        \r\n        <div>\r\n          <button \r\n            type=\"submit\" \r\n            class=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded-lg disabled:opacity-50\"\r\n            [disabled]=\"loading\"\r\n          >\r\n            {{ loading ? 'Logging in...' : 'Log In' }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n      \r\n      <div class=\"mt-6 text-center\">\r\n        <p class=\"text-sm text-gray-600\">\r\n          Don't have an account? \r\n          <a [routerLink]=\"['/register']\" class=\"text-blue-500 hover:underline\">Sign up</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;ICI7DC,EAAA,CAAAC,cAAA,cAAuE;IACrED,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADJH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAC,MAAA,CAAAC,KAAA,MACF;;;;;IAYIP,EAAA,CAAAC,cAAA,cAA8F;IAC5FD,EAAA,CAAAE,MAAA,6BACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;IAYNH,EAAA,CAAAC,cAAA,cAA8F;IAC5FD,EAAA,CAAAE,MAAA,6BACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;;;;;;;;ADzBhB,OAAM,MAAOK,cAAc;EAOzBC,YACUC,EAAe,EACfC,KAAqB,EACrBC,MAAc,EACdC,WAAwB;IAHxB,KAAAH,EAAE,GAAFA,EAAE;IACF,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,WAAW,GAAXA,WAAW;IATrB,KAAAC,OAAO,GAAG,KAAK;IACf,KAAAC,SAAS,GAAG,KAAK;IACjB,KAAAR,KAAK,GAAkB,IAAI;IAC3B,KAAAS,SAAS,GAAW,GAAG;IAQrB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACP,EAAE,CAACQ,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACpB,UAAU,CAACqB,QAAQ,CAAC,CAAC;MACrCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACtB,UAAU,CAACqB,QAAQ,CAAC;KACrC,CAAC;IAEF;IACA,IAAI,IAAI,CAACP,WAAW,CAACS,UAAU,EAAE,EAAE;MACjC,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;EAE/B;EAEAC,QAAQA,CAAA;IACN;IACA,IAAI,CAACR,SAAS,GAAG,IAAI,CAACL,KAAK,CAACc,QAAQ,CAACC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG;EACtE;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACZ,SAAS,GAAG,IAAI;IAErB,IAAI,IAAI,CAACE,SAAS,CAACW,OAAO,EAAE;MAC1B;;IAGF,IAAI,CAACd,OAAO,GAAG,IAAI;IACnB,IAAI,CAACP,KAAK,GAAG,IAAI;IAEjB,MAAM;MAAEY,QAAQ;MAAEE;IAAQ,CAAE,GAAG,IAAI,CAACJ,SAAS,CAACY,KAAK;IAEnD,IAAI,CAAChB,WAAW,CAACiB,KAAK,CAACX,QAAQ,EAAEE,QAAQ,CAAC,CAACU,SAAS,CAAC;MACnDC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACpB,WAAW,CAACqB,SAAS,CAACD,QAAQ,CAACE,KAAK,CAAC;QAC1C,IAAI,CAACvB,MAAM,CAACW,QAAQ,CAAC,CAAC,IAAI,CAACP,SAAS,CAAC,CAAC;MACxC,CAAC;MACDT,KAAK,EAAG6B,GAAG,IAAI;QACb,IAAI,CAAC7B,KAAK,GAAG6B,GAAG,EAAE7B,KAAK,EAAE8B,OAAO,IAAI,8CAA8C;QAClF,IAAI,CAACvB,OAAO,GAAG,KAAK;MACtB;KACD,CAAC;EACJ;;;uBAnDWN,cAAc,EAAAR,EAAA,CAAAsC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAxC,EAAA,CAAAsC,iBAAA,CAAAG,EAAA,CAAAC,cAAA,GAAA1C,EAAA,CAAAsC,iBAAA,CAAAG,EAAA,CAAAE,MAAA,GAAA3C,EAAA,CAAAsC,iBAAA,CAAAM,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAdrC,cAAc;MAAAsC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCV3BpD,EAAA,CAAAC,cAAA,aAAoC;UAGkBD,EAAA,CAAAE,MAAA,aAAM;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAE3DH,EAAA,CAAAsD,UAAA,IAAAC,6BAAA,iBAEM;UAENvD,EAAA,CAAAC,cAAA,cAAwE;UAA1CD,EAAA,CAAAwD,UAAA,sBAAAC,iDAAA;YAAA,OAAYJ,GAAA,CAAA1B,QAAA,EAAU;UAAA,EAAC;UACnD3B,EAAA,CAAAC,cAAA,UAAK;UACwED,EAAA,CAAAE,MAAA,eAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAC3FH,EAAA,CAAA0D,SAAA,gBAMC;UACD1D,EAAA,CAAAsD,UAAA,KAAAK,8BAAA,iBAEM;UACR3D,EAAA,CAAAG,YAAA,EAAM;UAENH,EAAA,CAAAC,cAAA,WAAK;UACwED,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAC3FH,EAAA,CAAA0D,SAAA,iBAMC;UACD1D,EAAA,CAAAsD,UAAA,KAAAM,8BAAA,iBAEM;UACR5D,EAAA,CAAAG,YAAA,EAAM;UAENH,EAAA,CAAAC,cAAA,WAAK;UAMDD,EAAA,CAAAE,MAAA,IACF;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAIbH,EAAA,CAAAC,cAAA,eAA8B;UAE1BD,EAAA,CAAAE,MAAA,gCACA;UAAAF,EAAA,CAAAC,cAAA,aAAsE;UAAAD,EAAA,CAAAE,MAAA,eAAO;UAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;;;UA/C/EH,EAAA,CAAAI,SAAA,GAAW;UAAXJ,EAAA,CAAA6D,UAAA,SAAAR,GAAA,CAAA9C,KAAA,CAAW;UAIXP,EAAA,CAAAI,SAAA,GAAuB;UAAvBJ,EAAA,CAAA6D,UAAA,cAAAR,GAAA,CAAApC,SAAA,CAAuB;UAQvBjB,EAAA,CAAAI,SAAA,GAAiF;UAAjFJ,EAAA,CAAA6D,UAAA,YAAA7D,EAAA,CAAA8D,eAAA,IAAAC,GAAA,EAAAV,GAAA,CAAAtC,SAAA,MAAAiD,OAAA,GAAAX,GAAA,CAAApC,SAAA,CAAAgD,GAAA,+BAAAD,OAAA,CAAApC,OAAA,GAAiF;UAE7E5B,EAAA,CAAAI,SAAA,GAAoD;UAApDJ,EAAA,CAAA6D,UAAA,SAAAR,GAAA,CAAAtC,SAAA,MAAAmD,OAAA,GAAAb,GAAA,CAAApC,SAAA,CAAAgD,GAAA,+BAAAC,OAAA,CAAAC,MAAA,EAAoD;UAYxDnE,EAAA,CAAAI,SAAA,GAAiF;UAAjFJ,EAAA,CAAA6D,UAAA,YAAA7D,EAAA,CAAA8D,eAAA,KAAAC,GAAA,EAAAV,GAAA,CAAAtC,SAAA,MAAAqD,OAAA,GAAAf,GAAA,CAAApC,SAAA,CAAAgD,GAAA,+BAAAG,OAAA,CAAAxC,OAAA,GAAiF;UAE7E5B,EAAA,CAAAI,SAAA,GAAoD;UAApDJ,EAAA,CAAA6D,UAAA,SAAAR,GAAA,CAAAtC,SAAA,MAAAsD,OAAA,GAAAhB,GAAA,CAAApC,SAAA,CAAAgD,GAAA,+BAAAI,OAAA,CAAAF,MAAA,EAAoD;UASxDnE,EAAA,CAAAI,SAAA,GAAoB;UAApBJ,EAAA,CAAA6D,UAAA,aAAAR,GAAA,CAAAvC,OAAA,CAAoB;UAEpBd,EAAA,CAAAI,SAAA,GACF;UADEJ,EAAA,CAAAK,kBAAA,MAAAgD,GAAA,CAAAvC,OAAA,mCACF;UAOGd,EAAA,CAAAI,SAAA,GAA4B;UAA5BJ,EAAA,CAAA6D,UAAA,eAAA7D,EAAA,CAAAsE,eAAA,KAAAC,GAAA,EAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}