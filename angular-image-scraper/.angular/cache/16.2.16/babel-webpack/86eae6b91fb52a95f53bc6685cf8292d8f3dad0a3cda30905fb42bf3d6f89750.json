{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}`;\n    this.tokenKey = 'auth_token';\n  }\n  register(username, password) {\n    return this.http.post(`${this.apiUrl}/register/`, {\n      username,\n      password\n    });\n  }\n  login(username, password) {\n    // Django uses built-in auth views or token auth\n    return this.http.post(`${this.apiUrl}/api-token-auth/`, {\n      username,\n      password\n    });\n  }\n  logout() {\n    localStorage.removeItem(this.tokenKey);\n  }\n  getProfile() {\n    return this.http.get(`${this.apiUrl}/profile`);\n  }\n  getToken() {\n    return localStorage.getItem(this.tokenKey);\n  }\n  saveToken(token) {\n    localStorage.setItem(this.tokenKey, token);\n  }\n  isLoggedIn() {\n    return !!this.getToken();\n  }\n  getCurrentUser() {\n    return this.http.get(`${this.apiUrl}/me`);\n  }\n  isAuthenticated() {\n    return this.isLoggedIn();\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","AuthService","constructor","http","apiUrl","tokenKey","register","username","password","post","login","logout","localStorage","removeItem","getProfile","get","getToken","getItem","saveToken","token","setItem","isLoggedIn","getCurrentUser","isAuthenticated","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\aleja\\Desktop\\BINFO\\ATA\\image-crawler\\angular-image-scraper\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthResponse, User } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private apiUrl = `${environment.apiUrl}`;\r\n  private tokenKey = 'auth_token';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  register(username: string, password: string): Observable<AuthResponse> {\r\n    return this.http.post<AuthResponse>(`${this.apiUrl}/register/`, { username, password });\r\n  }\r\n\r\n  login(username: string, password: string): Observable<AuthResponse> {\r\n    // Django uses built-in auth views or token auth\r\n    return this.http.post<AuthResponse>(`${this.apiUrl}/api-token-auth/`, { username, password });\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem(this.tokenKey);\r\n  }\r\n\r\n  getProfile(): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/profile`);\r\n  }\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem(this.tokenKey);\r\n  }\r\n\r\n  saveToken(token: string): void {\r\n    localStorage.setItem(this.tokenKey, token);\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n  getCurrentUser(): Observable<User> {\r\n    return this.http.get<User>(`${this.apiUrl}/me`);\r\n  }\r\n  \r\n  isAuthenticated(): boolean {\r\n    return this.isLoggedIn();\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,gCAAgC;;;AAM5D,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,MAAM,GAAG,GAAGJ,WAAW,CAACI,MAAM,EAAE;IAChC,KAAAC,QAAQ,GAAG,YAAY;EAES;EAExCC,QAAQA,CAACC,QAAgB,EAAEC,QAAgB;IACzC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAe,GAAG,IAAI,CAACL,MAAM,YAAY,EAAE;MAAEG,QAAQ;MAAEC;IAAQ,CAAE,CAAC;EACzF;EAEAE,KAAKA,CAACH,QAAgB,EAAEC,QAAgB;IACtC;IACA,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAe,GAAG,IAAI,CAACL,MAAM,kBAAkB,EAAE;MAAEG,QAAQ;MAAEC;IAAQ,CAAE,CAAC;EAC/F;EAEAG,MAAMA,CAAA;IACJC,YAAY,CAACC,UAAU,CAAC,IAAI,CAACR,QAAQ,CAAC;EACxC;EAEAS,UAAUA,CAAA;IACR,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAM,GAAG,IAAI,CAACX,MAAM,UAAU,CAAC;EACrD;EAEAY,QAAQA,CAAA;IACN,OAAOJ,YAAY,CAACK,OAAO,CAAC,IAAI,CAACZ,QAAQ,CAAC;EAC5C;EAEAa,SAASA,CAACC,KAAa;IACrBP,YAAY,CAACQ,OAAO,CAAC,IAAI,CAACf,QAAQ,EAAEc,KAAK,CAAC;EAC5C;EAEAE,UAAUA,CAAA;IACR,OAAO,CAAC,CAAC,IAAI,CAACL,QAAQ,EAAE;EAC1B;EACAM,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACnB,IAAI,CAACY,GAAG,CAAO,GAAG,IAAI,CAACX,MAAM,KAAK,CAAC;EACjD;EAEAmB,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,UAAU,EAAE;EAC1B;;;uBAxCWpB,WAAW,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAX1B,WAAW;MAAA2B,OAAA,EAAX3B,WAAW,CAAA4B,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}