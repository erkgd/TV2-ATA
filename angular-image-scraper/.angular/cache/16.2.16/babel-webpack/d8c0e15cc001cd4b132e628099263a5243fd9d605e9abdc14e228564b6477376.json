{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/auth.service\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction RegisterComponent_div_11_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_11_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Username must be at least 3 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, RegisterComponent_div_11_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(2, RegisterComponent_div_11_span_2_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.registerForm.get(\"username\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.registerForm.get(\"username\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction RegisterComponent_div_16_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_16_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, RegisterComponent_div_16_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(2, RegisterComponent_div_16_span_2_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.registerForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r2.registerForm.get(\"password\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction RegisterComponent_div_21_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password confirmation is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_21_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Passwords do not match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtemplate(1, RegisterComponent_div_21_span_1_Template, 2, 0, \"span\", 19);\n    i0.ɵɵtemplate(2, RegisterComponent_div_21_span_2_Template, 2, 0, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.registerForm.get(\"confirmPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r3.registerForm.get(\"confirmPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"mismatch\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"border-red-500\": a0\n  };\n};\nconst _c1 = function () {\n  return [\"/login\"];\n};\nexport class RegisterComponent {\n  constructor(fb, router, authService) {\n    this.fb = fb;\n    this.router = router;\n    this.authService = authService;\n    this.loading = false;\n    this.submitted = false;\n    this.error = null;\n    this.registerForm = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(3)]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]]\n    }, {\n      validator: this.passwordMatchValidator\n    });\n    // Redirect if already logged in\n    if (this.authService.isLoggedIn()) {\n      this.router.navigate(['/']);\n    }\n  }\n  // Custom validator for password matching\n  passwordMatchValidator(formGroup) {\n    const password = formGroup.get('password')?.value;\n    const confirmPassword = formGroup.get('confirmPassword')?.value;\n    if (password !== confirmPassword) {\n      formGroup.get('confirmPassword')?.setErrors({\n        mismatch: true\n      });\n    } else {\n      formGroup.get('confirmPassword')?.setErrors(null);\n    }\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    this.error = null;\n    const {\n      username,\n      password\n    } = this.registerForm.value;\n    this.authService.register(username, password).subscribe({\n      next: response => {\n        // Automatically login after registration\n        this.authService.login(username, password).subscribe({\n          next: loginResponse => {\n            this.authService.saveToken(loginResponse.token);\n            this.router.navigate(['/']);\n          },\n          error: err => {\n            // Registration successful but login failed\n            this.router.navigate(['/login'], {\n              queryParams: {\n                registrationSuccess: 'true'\n              }\n            });\n          }\n        });\n      },\n      error: err => {\n        this.error = err?.error?.message || 'Registration failed. Please try again.';\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function RegisterComponent_Factory(t) {\n      return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      decls: 30,\n      vars: 18,\n      consts: [[1, \"max-w-md\", \"mx-auto\", \"mt-10\"], [1, \"bg-white\", \"rounded-lg\", \"shadow-md\", \"overflow-hidden\"], [1, \"p-6\"], [1, \"text-2xl\", \"font-bold\", \"text-center\", \"mb-6\"], [\"class\", \"p-3 mb-4 bg-red-100 text-red-700 rounded-lg\", 4, \"ngIf\"], [1, \"space-y-4\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"username\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\", \"mb-1\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\", 1, \"w-full\", \"p-2\", \"border\", \"border-gray-300\", \"rounded-md\", \"focus:ring-blue-500\", \"focus:border-blue-500\", 3, \"ngClass\"], [\"class\", \"text-red-500 text-xs mt-1\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\", \"mb-1\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"w-full\", \"p-2\", \"border\", \"border-gray-300\", \"rounded-md\", \"focus:ring-blue-500\", \"focus:border-blue-500\", 3, \"ngClass\"], [\"for\", \"confirmPassword\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\", \"mb-1\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", 1, \"w-full\", \"p-2\", \"border\", \"border-gray-300\", \"rounded-md\", \"focus:ring-blue-500\", \"focus:border-blue-500\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"w-full\", \"bg-blue-500\", \"hover:bg-blue-600\", \"text-white\", \"font-medium\", \"py-2\", \"px-4\", \"rounded-lg\", \"disabled:opacity-50\", 3, \"disabled\"], [1, \"mt-6\", \"text-center\"], [1, \"text-sm\", \"text-gray-600\"], [1, \"text-blue-500\", \"hover:underline\", 3, \"routerLink\"], [1, \"p-3\", \"mb-4\", \"bg-red-100\", \"text-red-700\", \"rounded-lg\"], [1, \"text-red-500\", \"text-xs\", \"mt-1\"], [4, \"ngIf\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n          i0.ɵɵtext(4, \"Create Account\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(5, RegisterComponent_div_5_Template, 2, 1, \"div\", 4);\n          i0.ɵɵelementStart(6, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(7, \"div\")(8, \"label\", 6);\n          i0.ɵɵtext(9, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 7);\n          i0.ɵɵtemplate(11, RegisterComponent_div_11_Template, 3, 2, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\")(13, \"label\", 9);\n          i0.ɵɵtext(14, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 10);\n          i0.ɵɵtemplate(16, RegisterComponent_div_16_Template, 3, 2, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\")(18, \"label\", 11);\n          i0.ɵɵtext(19, \"Confirm Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"input\", 12);\n          i0.ɵɵtemplate(21, RegisterComponent_div_21_Template, 3, 2, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"div\")(23, \"button\", 13);\n          i0.ɵɵtext(24);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(25, \"div\", 14)(26, \"p\", 15);\n          i0.ɵɵtext(27, \" Already have an account? \");\n          i0.ɵɵelementStart(28, \"a\", 16);\n          i0.ɵɵtext(29, \"Log in\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          let tmp_7_0;\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.submitted && ((tmp_2_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_2_0.invalid)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ((tmp_3_0 = ctx.registerForm.get(\"username\")) == null ? null : tmp_3_0.errors));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.submitted && ((tmp_4_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_4_0.invalid)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ((tmp_5_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_5_0.errors));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.submitted && ((tmp_6_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_6_0.invalid)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ((tmp_7_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_7_0.errors));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Creating account...\" : \"Sign Up\", \" \");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(17, _c1));\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i2.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","error","ɵɵtemplate","RegisterComponent_div_11_span_1_Template","RegisterComponent_div_11_span_2_Template","ɵɵproperty","tmp_0_0","ctx_r1","registerForm","get","errors","tmp_1_0","RegisterComponent_div_16_span_1_Template","RegisterComponent_div_16_span_2_Template","ctx_r2","RegisterComponent_div_21_span_1_Template","RegisterComponent_div_21_span_2_Template","ctx_r3","RegisterComponent","constructor","fb","router","authService","loading","submitted","group","username","required","minLength","password","confirmPassword","validator","passwordMatchValidator","isLoggedIn","navigate","formGroup","value","setErrors","mismatch","onSubmit","invalid","register","subscribe","next","response","login","loginResponse","saveToken","token","err","queryParams","registrationSuccess","message","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","AuthService","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","RegisterComponent_div_5_Template","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_6_listener","ɵɵelement","RegisterComponent_div_11_Template","RegisterComponent_div_16_Template","RegisterComponent_div_21_Template","ɵɵpureFunction1","_c0","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","ɵɵpureFunction0","_c1"],"sources":["C:\\Users\\aleja\\Desktop\\BINFO\\ATA\\image-crawler\\angular-image-scraper\\src\\app\\components\\auth\\register.component.ts","C:\\Users\\aleja\\Desktop\\BINFO\\ATA\\image-crawler\\angular-image-scraper\\src\\app\\components\\auth\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent {\r\n  registerForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  error: string | null = null;\r\n  \r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    this.registerForm = this.fb.group({\r\n      username: ['', [Validators.required, Validators.minLength(3)]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required]]\r\n    }, {\r\n      validator: this.passwordMatchValidator\r\n    });\r\n    \r\n    // Redirect if already logged in\r\n    if (this.authService.isLoggedIn()) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  // Custom validator for password matching\r\n  passwordMatchValidator(formGroup: FormGroup) {\r\n    const password = formGroup.get('password')?.value;\r\n    const confirmPassword = formGroup.get('confirmPassword')?.value;\r\n    \r\n    if (password !== confirmPassword) {\r\n      formGroup.get('confirmPassword')?.setErrors({ mismatch: true });\r\n    } else {\r\n      formGroup.get('confirmPassword')?.setErrors(null);\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.submitted = true;\r\n    \r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n    \r\n    this.loading = true;\r\n    this.error = null;\r\n    \r\n    const { username, password } = this.registerForm.value;\r\n    \r\n    this.authService.register(username, password).subscribe({\r\n      next: (response) => {\r\n        // Automatically login after registration\r\n        this.authService.login(username, password).subscribe({\r\n          next: (loginResponse) => {\r\n            this.authService.saveToken(loginResponse.token);\r\n            this.router.navigate(['/']);\r\n          },\r\n          error: (err) => {\r\n            // Registration successful but login failed\r\n            this.router.navigate(['/login'], { \r\n              queryParams: { registrationSuccess: 'true' } \r\n            });\r\n          }\r\n        });\r\n      },\r\n      error: (err) => {\r\n        this.error = err?.error?.message || 'Registration failed. Please try again.';\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"max-w-md mx-auto mt-10\">\r\n  <div class=\"bg-white rounded-lg shadow-md overflow-hidden\">\r\n    <div class=\"p-6\">\r\n      <h1 class=\"text-2xl font-bold text-center mb-6\">Create Account</h1>\r\n\r\n      <div *ngIf=\"error\" class=\"p-3 mb-4 bg-red-100 text-red-700 rounded-lg\">\r\n        {{ error }}\r\n      </div>\r\n      \r\n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" class=\"space-y-4\">\r\n        <div>\r\n          <label for=\"username\" class=\"block text-sm font-medium text-gray-700 mb-1\">Username</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"username\" \r\n            formControlName=\"username\"\r\n            class=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\r\n            [ngClass]=\"{ 'border-red-500': submitted && registerForm.get('username')?.invalid }\"\r\n          >\r\n          <div *ngIf=\"submitted && registerForm.get('username')?.errors\" class=\"text-red-500 text-xs mt-1\">\r\n            <span *ngIf=\"registerForm.get('username')?.errors?.['required']\">Username is required</span>\r\n            <span *ngIf=\"registerForm.get('username')?.errors?.['minlength']\">Username must be at least 3 characters</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div>\r\n          <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-1\">Password</label>\r\n          <input \r\n            type=\"password\" \r\n            id=\"password\" \r\n            formControlName=\"password\"\r\n            class=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\r\n            [ngClass]=\"{ 'border-red-500': submitted && registerForm.get('password')?.invalid }\"\r\n          >\r\n          <div *ngIf=\"submitted && registerForm.get('password')?.errors\" class=\"text-red-500 text-xs mt-1\">\r\n            <span *ngIf=\"registerForm.get('password')?.errors?.['required']\">Password is required</span>\r\n            <span *ngIf=\"registerForm.get('password')?.errors?.['minlength']\">Password must be at least 6 characters</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div>\r\n          <label for=\"confirmPassword\" class=\"block text-sm font-medium text-gray-700 mb-1\">Confirm Password</label>\r\n          <input \r\n            type=\"password\" \r\n            id=\"confirmPassword\" \r\n            formControlName=\"confirmPassword\"\r\n            class=\"w-full p-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500\"\r\n            [ngClass]=\"{ 'border-red-500': submitted && registerForm.get('confirmPassword')?.invalid }\"\r\n          >\r\n          <div *ngIf=\"submitted && registerForm.get('confirmPassword')?.errors\" class=\"text-red-500 text-xs mt-1\">\r\n            <span *ngIf=\"registerForm.get('confirmPassword')?.errors?.['required']\">Password confirmation is required</span>\r\n            <span *ngIf=\"registerForm.get('confirmPassword')?.errors?.['mismatch']\">Passwords do not match</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div>\r\n          <button \r\n            type=\"submit\" \r\n            class=\"w-full bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded-lg disabled:opacity-50\"\r\n            [disabled]=\"loading\"\r\n          >\r\n            {{ loading ? 'Creating account...' : 'Sign Up' }}\r\n          </button>\r\n        </div>\r\n      </form>\r\n      \r\n      <div class=\"mt-6 text-center\">\r\n        <p class=\"text-sm text-gray-600\">\r\n          Already have an account? \r\n          <a [routerLink]=\"['/login']\" class=\"text-blue-500 hover:underline\">Log in</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}